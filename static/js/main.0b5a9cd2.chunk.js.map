{"version":3,"sources":["assets/img/selection.svg","assets/img/global_error.svg","assets/img/happy.svg","assets/img/delivery-4.png","assets/img/user_signup.png","utils/setAuthToken.js","utils/integration.js","actions/authActions.js","actions/types.js","components/footer.component.jsx","components/hero-login.component.jsx","components/navbar.component.jsx","components/error/error.component.jsx","components/error/error1.component.jsx","components/end_exam.component.jsx","components/exam_instruction.js","components/user_overview.component.jsx","components/org_signup.component.jsx","components/candidate_signup.component.jsx","components/quiz/exam.component.jsx","components/OrgManage/participants.component.jsx","components/OrgManage/contact.component.jsx","components/OrgManage/questions/components/rows/questionRow.js","components/OrgManage/questions/components/rows/editRow.js","components/OrgManage/questions/components/rows/newRow.js","components/OrgManage/questions/containers/question.js","components/OrgManage/questions/components/questionList.js","components/OrgManage/questions/containers/main.js","components/OrgManage/InitialRoute.component.jsx","components/OrgManage/Org_manage.component.jsx","components/error/error_test_off.component.jsx","components/error/error_test_not_started.component.jsx","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/protectedRoute.jsx","App.js","serviceWorker.js","index.js","assets/img/15.png","assets/img/brand/white.svg"],"names":["module","exports","setAuthToken","token","axios","defaults","headers","common","backURL","setCurrentUser","decoded","type","payload","setCurrentOrg","logout","dispatch","localStorage","removeItem","Footer","className","Container","style","margin","textAlign","Row","Col","lg","fontSize","href","alt","src","footimage","height","paddingBottom","color","marginTop","Date","getFullYear","Component","Login","createBrowserHistory","state","iconTabs","plainTabs","regNo","password_user","testId","testId_org","email","password_org","errors","loading","loading_org","toggleNavs","e","index","preventDefault","setState","onChange","target","id","value","onChangeAlter","toUpperCase","onSubmit","userData","password","buttonState","props","loginUser","onSubmit_org","orgData","buttonState_org","loginOrg","window","scrollTo","this","auth","isAuthenticated","history","push","isAuthenticated_org","nextProps","setTimeout","require","Nav","pills","role","NavItem","NavLink","aria-selected","classnames","active","onClick","Card","CardBody","padding","TabContent","activeTab","TabPane","tabId","CardHeader","backgroundColor","Form","noValidate","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","error","onFocus","emailFocused","onBlur","invalid","regNoNotFound","marginBottom","focused","passwordFocused","autoComplete","passwordincorrect","testIdIncorrect","testidIncorrect","Button","disabled","marginRight","to","emailnotfound","React","connect","post","then","res","data","setItem","jwt_decode","catch","err","response","Navbar1","Navbar","expand","NavbarBrand","UncontrolledCollapse","navbar","toggler","xs","UncontrolledDropdown","nav","UncontrolledTooltip","delay","Error","onLogout","Error1","Finish","Instruction","text","CandProfile","fetchDesc","orgDesc","orgName","isChecked","user","name","clubCode","maxHeight","overflow","map","el","key","checked","htmlFor","OrgSignUp","clubName","extras","mobileNo","registerOrg","nameFocused","confirmPassword","passwordMatch","onChangePasswordConfirm","bind","namenotfound","regnotfound","length","cols","rows","fontWeight","UserSignUp","blockName","roomNo","registerUser","Exam","nextQuestionHandler","QuizData","currentQuestion","nextDisable","prevQuestionHandler","userAnswer","options","questions","setAns","selectedAns","ansSaved","getItem","split","questionSet","quid","ques","_","uniqBy","document","addEventListener","loadQuiz","prevProps","prevState","classname","userSelect","MozUserSelect","WebkitUserSelect","msUserSelect","WebkitTouchCallout","display","option","console","log","Participants","org","details","xls_download","alert","isOpen","tableID","downloadLink","filename","dataType","tableSelect","getElementById","tableHTML","outerHTML","replace","createElement","body","appendChild","navigator","msSaveOrOpenBlob","blob","Blob","download","click","exportTableToExcel","marks","wordWrap","Contact","QuestionRow","onEditEvent","onDelEvent","question","_id","ans","cursor","EditRow","onSaveEvent","onCellChange","_ids","defaultValue","NewRow","cellChange","Question","handleDeleteClick","editMode","newMode","handleRowEdit","handleRowSave","handleRowCreate","newRowCellChange","editOnCellChange","onRowAdd","evt","item","onRowSave","rowDel","QuestionList","testMode","getTestStatus","onRowDel","forEach","QuestionHolder","shownQuestions","filter","activeSort","handleRowDel","handleRowAdd","indexOf","splice","delete","JSON","stringify","config","toString","put","filters","overflowX","filterValue","onFilterChange","handleFilterChange","Initial","OrgManage","logoutOrg","DropdownToggle","DropdownMenu","DropdownItem","tag","Link","exact","tabIndex","path","component","ErrorDisable","ErrorExamNotStarted","initialState","isEmpty","combineReducers","action","middleware","thunk","store","createStore","roorReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","prop","App","basename","process","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","origin","fetch","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","waitingSW","waiting","event","postMessage"],"mappings":"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","file":"static/js/main.0b5a9cd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selection.141ed1fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/global_error.734e2928.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy.defe0b5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/delivery-4.671f7afd.png\";","module.exports = __webpack_public_path__ + \"static/media/user_signup.56e652d2.png\";","import axios from 'axios'\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = token;\n\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","export const backURL = \"https://easyrecruit-backend.azurewebsites.net\";\n","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from '../utils/setAuthToken'\nimport { SET_CURRENT_USER, GET_ERRORS, SET_CURRENT_ORG } from './types'\nimport { backURL } from '../utils/integration'\n// Register the user\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n        .post(`${backURL}/api/users/register`,userData)\n        .then(res => history.push('/'))\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(`${backURL}/api/users/login`,userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(\n            err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                })\n            }\n        )\n}\n\nexport const registerOrg = (orgData, history) => dispatch => {\n    axios\n        .post(`${backURL}/api/orgs/register`,orgData)\n        .then(res => history.push('/'))\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n};\n\nexport const loginOrg = (orgData) => dispatch => {\n    axios\n        .post(`${backURL}/api/orgs/login`, orgData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentOrg(decoded));\n\n        })\n        .catch(\n            err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                })\n            }\n        )\n}\n\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const setCurrentOrg = decoded => {\n    return {\n        type: SET_CURRENT_ORG,\n        payload: decoded\n    }\n}\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n}\nexport const logoutOrg = () => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentOrg({}));\n}","export const SET_CURRENT_USER = 'SET_CURRENT_USER'\nexport const SET_CURRENT_ORG = 'SET_CURRENT_ORG'\nexport const GET_ERRORS = 'GET_ERRORS'\nexport const GET_QUESTIONS = 'GET_QUESTIONS'","import React, { Component } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport footimage from '../assets/img/brand/white.svg'\nclass Footer extends Component {\n  render() {\n    return (\n      <div >\n        <footer className=\" footer\">\n          <Container>\n            <div style={{ margin: 'auto', textAlign: \"center\" }}>\n              <Row>\n              <Col lg=\"6\">\n                  <div className=\" copyright text-white\" style={{fontSize:'1.2rem'}}>\n                  Brought to you by  \n                  </div><br />\n                  <a href='https://stcvit.in'>\n                <img\n                  alt=\"...\"\n                  className=\"img-fluid\"\n                  src={footimage}\n                  style={{ height: \"7em\", paddingBottom: \"1em\" }}\n                  /></a>\n               \n              </Col>\n                <Col>\n                  <span style={{ color: 'white', paddingBottom: '1.5em', fontSize: '1.2rem' }}>Follow us at</span><br />\n                  <div style={{marginTop:'1em'}}>\n                  <a href='https://www.instagram.com/mstcvit/' style={{margin:'1em'}}>\n                    <i className=\"fa fa-instagram text-white foot\" />\n                  </a>\n                  <a href='https://www.facebook.com/mstcvit/' style={{ margin: '1em' }}>\n                    <i className=\"fa fa-facebook text-white foot\" />\n                  </a>\n                  <a href='https://www.linkedin.com/company/micvitvellore' style={{ margin: '1em' }}>\n                    <i className=\"fa fa-linkedin text-white foot\" />\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n              <hr color='white'/>\n              <Col>\n                <div className=\" copyright text-white\">\n                  © {new Date().getFullYear()}{\" \"}\n                  Student Technical Community .\n\n                </div>\n              \n                <div className=\"copyright text-white\">\n                  <p>Designed by <a href=\"https://www.linkedin.com/in/sanket-mohapatra-b10661176/\"> Sanket Mohapatra</a></p>\n                  <p style={{ marginTop: '-15px' }}>Backend developed by <a href=\"https://www.linkedin.com/in/pankaj-shukla-97a456190/\">Pankaj Shukla</a></p>\n\n                </div>\n              </Col>\n            </div>\n\n          </Container>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Footer","import React from \"react\";\nimport classnames from \"classnames\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loginUser, loginOrg } from '../actions/authActions'\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Nav,\n  NavItem,\n  Col,\n  NavLink,\n  TabContent,\n  TabPane\n} from \"reactstrap\";\nimport { Link } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport Footer from \"./footer.component\";\nexport const history = createBrowserHistory();\n\nclass Login extends React.Component {\n  state = {\n    iconTabs: 1,\n    plainTabs: 1,\n\n    regNo: '',\n    password_user: '',\n    testId: '',\n    testId_org: '',\n    email: '',\n    password_org: '',\n    errors: {},\n    loading: false,\n    loading_org:false\n\n  };\n\n  toggleNavs = (e, state, index) => {\n    e.preventDefault();\n    this.setState({\n      [state]: index\n    });\n\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/overview');\n    }\n    if (this.props.auth.isAuthenticated_org) {\n      this.props.history.push('/orgmanage');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/overview')\n    }\n    if (nextProps.auth.isAuthenticated_org) {\n      this.props.history.push('/orgmanage')\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      })\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onChangeAlter = e => {\n    this.setState({\n      [e.target.id]: e.target.value.toUpperCase()\n    })\n  }\n  buttonState() {\n    this.setState({\n      loading:true\n    })\n    setTimeout(() => {\n      this.setState({\n        loading: false\n      })\n    },5000)\n  }\n  buttonState_org() {\n    this.setState({\n      loading_org: true\n    })\n    setTimeout(() => {\n      this.setState({\n        loading_org: false\n      })\n    }, 5000)\n  }\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      regNo: this.state.regNo,\n      password: this.state.password_user,\n      testId: this.state.testId\n    };\n    this.buttonState();\n\n\n\n    this.props.loginUser(userData)\n  }\n  onSubmit_org = e => {\n    e.preventDefault();\n    const orgData = {\n      email: this.state.email,\n      password: this.state.password_org,\n      testId: this.state.testId_org\n    }\n    this.buttonState_org();\n\n    this.props.loginOrg(orgData);\n  }\n\n  render() {\n    const { errors, loading,loading_org } = this.state\n    return (\n      <div>\n        <section className=\"section section-lg section-shaped\" >\n          <div className=\"shape shape-style-1 shape-default\">\n\n          </div>\n          <Container className=\"py-md\">\n            <Row className=\"row-grid justify-content-between align-items-center\">\n              <Col lg=\"6\">\n                <img\n                  alt=\"...\"\n                  className=\"img-fluid\"\n                  style={{ paddingBottom: \"1em\", height: \"15em\" }}\n                  src={require(\"../assets/img/selection.svg\")}\n\n                />\n                <h1 className=\"display-3 text-white\">\n                  Recruitment Made Easy{\" \"}\n                </h1>\n                <p className=\"lead text-white\">\n                  Hassle-free unified test portal to help organisation to conduct exams\n                  efficiently and reduce the time wastage.\n                </p>                \n              </Col>\n              <Col className=\"mb-lg-auto\" lg=\"6\">\n\n                {/* Menu */}\n                <div className=\"mb-3\">\n                  <small className=\"text-uppercase font-weight-bold\">\n                    Sign In\n              </small>\n                </div>\n                <div className=\"nav-wrapper\">\n                  <Nav\n                    className=\"nav-fill flex-column flex-md-row\"\n                    id=\"tabs-icons-text\"\n                    pills\n                    role=\"tablist\"\n                  >\n                    <NavItem>\n                      <NavLink\n                        aria-selected={this.state.plainTabs === 1}\n                        className={classnames(\"mb-sm-3 mb-md-0\", {\n                          active: this.state.plainTabs === 1\n                        })}\n                        onClick={e => this.toggleNavs(e, \"plainTabs\", 1)}\n                        href=\"#pablo\"\n                        role=\"tab\"\n                      >\n                        For Candidates\n                  </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink\n                        aria-selected={this.state.plainTabs === 2}\n                        className={classnames(\"mb-sm-3 mb-md-0\", {\n                          active: this.state.plainTabs === 2\n                        })}\n                        onClick={e => this.toggleNavs(e, \"plainTabs\", 2)}\n                        href=\"#pablo\"\n                        role=\"tab\"\n                      >\n                        For Organisation\n                  </NavLink>\n                    </NavItem>                    \n                  </Nav>\n                </div>\n                <Card className=\"shadow\">\n                  <CardBody style={{ padding: \"0\" }}>\n                    <TabContent activeTab={\"plainTabs\" + this.state.plainTabs}>\n                      <TabPane tabId=\"plainTabs1\">\n\n\n                        {/* The login form */}\n                        <div>\n                          <Card className=\"bg-secondary shadow border-0\">\n                            <CardHeader className=\"pb-1\" style={{ backgroundColor: \"rgb(35, 35, 113)\" }}>\n                              <div className=\"text-muted text-center mb-3\" >\n                                <h4 className=\"text-white\">Sign In with Candidate ID</h4>\n                              </div>\n\n                            </CardHeader>\n                            <CardBody className=\"px-lg-5 py-lg-5\" style={{ backgroundColor: \"rgb(81, 81, 173)\" }}>\n                              <div className=\"text-center text-white \">\n                                <small>Sign in with credentials</small>\n                              </div>\n                              <Form noValidate onSubmit={this.onSubmit}>\n                                <FormGroup\n\n                                >\n                                  <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                      <InputGroupText>\n                                        <i className=\"fa fa-user\" />\n                                      </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                      placeholder=\"Registration No.\"\n                                      type=\"text\"\n                                      id=\"regNo\"\n                                      onChange={this.onChangeAlter}\n                                      value={this.state.regNo}\n                                      error={errors.regNo}\n                                      onFocus={e =>\n                                        this.setState({ emailFocused: true })\n                                      }\n                                      onBlur={e =>\n                                        this.setState({ emailFocused: false })\n                                      }\n\n                                      className={classnames(\"\", {\n                                        invalid: errors.regNo || errors.regNoNotFound\n                                      })}\n                                    />\n                                  </InputGroup>\n                                </FormGroup>\n                                <div className=\"center-tag\"\n                                  style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                  <span className=\"red-text\"\n                                    style={\n                                      {\n                                        color: 'red'\n                                      }\n                                    }>\n                                    {errors.regNo}\n                                    {errors.regNoNotFound}\n                                  </span> </div>\n\n\n                                <FormGroup\n                                  className={classnames({\n                                    focused: this.state.passwordFocused\n                                  })}\n                                >\n                                  <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                      <InputGroupText>\n                                        <i className=\"ni ni-lock-circle-open\" />\n                                      </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                      placeholder=\"Password (Case sensitive)\"\n                                      type=\"password\"\n                                      id=\"password_user\"\n                                      onChange={this.onChange}\n                                      value={this.state.password_user}\n                                      error={errors.password_user}\n                                      autoComplete=\"off\"\n                                      className={classnames(\"\", {\n                                        invalid: errors.password|| errors.passwordincorrect\n                                      })}\n                                      onFocus={e =>\n                                        this.setState({ passwordFocused: true })\n                                      }\n                                      onBlur={e =>\n                                        this.setState({ passwordFocused: false })\n                                      }\n                                    />\n                                  </InputGroup>\n                                </FormGroup>\n                                <div className=\"center-tag\"\n                                  style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                  <span className=\"red-text\"\n                                    style={\n                                      {\n                                        color: 'red'\n                                      }\n                                    }>\n                                    {errors.password}\n                                    {errors.passwordincorrect}\n                                  </span> </div>\n                                <FormGroup\n                                  className={classnames({\n                                    focused: this.state.passwordFocused\n                                  })}\n                                >\n                                  <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                      <InputGroupText>\n                                        <i className=\"fa fa-newspaper-o\" />\n                                      </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                      placeholder=\"Test ID\"\n                                      type=\"number\"\n                                      id=\"testId\"\n                                      onChange={this.onChange}\n                                      value={this.state.testId}\n                                      error={errors.testId}\n                                      autoComplete=\"off\"\n                                      className={classnames(\"\", {\n                                        invalid: errors.testId || errors.testIdIncorrect\n                                      })}\n                                    />\n                                  </InputGroup>\n                                </FormGroup>\n                                <div className=\"center-tag\"\n                                  style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                  <span className=\"red-text\"\n                                    style={\n                                      {\n                                        color: 'red'\n                                      }\n                                    }>\n                                    {errors.testId}\n                                    {errors.testidIncorrect}\n                                  </span> </div>\n                                <div className=\"center-tag\"\n                                  style={{ margin: 'auto', textAlign: 'center' }}>\n                                  {/* <Link to='/overview'> */}\n                                  <Button\n                                    className=\"my-4\"\n                                    type=\"submit\"\n                                    disabled={loading}\n                                  >\n                                    {loading && (\n                                      <i\n                                        className=\"fa fa-refresh fa-spin\"\n                                        style={{ marginRight: \"5px\" }}\n                                      />\n                                    )}\n                                    {loading && <span>Sign in</span>}\n                                    {!loading && <span>Sign in</span>}\n                    </Button>\n                                  <Link to='/candsignup'>\n\n                                    <Button\n                                      className=\"my-4\"\n                                      type=\"button\"\n                                     \n                                    >\n                                      \n                                      Sign Up\n                    </Button></Link>\n                                </div>\n\n\n                              </Form>\n                            </CardBody>\n                          </Card>\n                        </div>\n\n\n\n\n                      </TabPane>\n                      <TabPane tabId=\"plainTabs2\">\n\n\n                        <div>\n                          <Card className=\"bg-secondary shadow border-0\">\n                            <CardHeader className=\"pb-1\" style={{ backgroundColor: \"rgb(35, 35, 113)\" }}>\n                              <div className=\"text-muted text-center mb-3\" >\n                                <h4 className=\"text-white\">Sign In with Organisation ID</h4>\n                              </div>\n\n                            </CardHeader>\n                            <CardBody className=\"px-lg-5 py-lg-5\" style={{ backgroundColor: \"rgb(81, 81, 173)\" }}>\n                              <div className=\"text-center text-white \">\n                                <small>Sign in with credentials</small>\n                              </div>\n                              <Form noValidate onSubmit={this.onSubmit_org}>\n                                <FormGroup\n                                  className={classnames(\"mb-3\", {\n                                    focused: this.state.emailFocused\n                                  })}\n                                >\n                                  <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                      <InputGroupText>\n                                        <i className=\"ni ni-email-83\" />\n                                      </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                      placeholder=\"Email\"\n                                      type=\"email\"\n                                      id='email'\n                                      value={this.state.email}\n                                      onChange={this.onChangeAlter}\n                                      error={errors.email}\n                                      className={classnames(\"\", {\n                                        invalid: errors.email || errors.emailnotfound\n                                      })}\n                                    />\n                                  </InputGroup>\n                                </FormGroup>\n                                <div className=\"center-tag\"\n                                  style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                  <span className=\"red-text\"\n                                    style={\n                                      {\n                                        color: 'red'\n                                      }\n                                    }>\n                                    {errors.email}\n                                    {errors.emailnotfound}\n                                  </span> </div>\n                                <FormGroup\n                                  className={classnames({\n                                    focused: this.state.passwordFocused\n                                  })}\n                                >\n                                  <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                      <InputGroupText>\n                                        <i className=\"ni ni-lock-circle-open\" />\n                                      </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                      placeholder=\"Password (Case sensitive)\"\n                                      type=\"password\"\n                                      autoComplete=\"off\"\n                                      id='password_org'\n                                      value={this.state.password_org}\n                                      onChange={this.onChange}\n                                      error={errors.password_org}\n                                      className={classnames(\"\", {\n                                        invalid: errors.password|| errors.passwordincorrect\n                                      })}\n                                    />\n                                  </InputGroup>\n                                </FormGroup>\n                                <div className=\"center-tag\"\n                                  style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                  <span className=\"red-text\"\n                                    style={\n                                      {\n                                        color: 'red'\n                                      }\n                                    }>\n                                    {errors.password}\n                                    {errors.passwordincorrect}\n                                  </span> </div>\n                                <FormGroup\n                                  className={classnames({\n                                    focused: this.state.passwordFocused\n                                  })}\n                                >\n                                  <InputGroup className=\"input-group-alternative\">\n                                    <InputGroupAddon addonType=\"prepend\">\n                                      <InputGroupText>\n                                        <i className=\"fa fa-newspaper-o\" />\n                                      </InputGroupText>\n                                    </InputGroupAddon>\n                                    <Input\n                                      placeholder=\"Test ID\"\n                                      type=\"number\"\n                                      id=\"testId_org\"\n                                      onChange={this.onChange}\n                                      value={this.state.testId_org}\n                                      error={errors.testId_org}\n                                      autoComplete=\"off\"\n                                      className={classnames(\"\", {\n                                        invalid: errors.testId_org || errors.testIdIncorrect\n                                      })}\n                                    />\n                                  </InputGroup>\n                                </FormGroup>\n                                <div className=\"center-tag\"\n                                  style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                  <span className=\"red-text\"\n                                    style={\n                                      {\n                                        color: 'red'\n                                      }\n                                    }>\n                                    {errors.testId_org}\n                                    {errors.testidIncorrect}\n                                  </span> </div>\n\n                                <div className=\"text-center\">\n                                  <Button\n                                    className=\"my-4\"\n                                    type=\"submit\"\n                                    disabled={loading_org}\n\n                                  >\n                                    {loading_org && (\n                                      <i\n                                        className=\"fa fa-refresh fa-spin\"\n                                        style={{ marginRight: \"5px\" }}\n                                      />\n                                    )}\n                                    {loading_org && <span>Sign in</span>}\n                                    {!loading_org && <span>Sign in</span>}\n                    </Button>\n                                  <Link to='/orgsignup'>\n\n                                    <Button\n                                      className=\"my-4\"\n                                      type=\"button\"\n                                    >\n                                      Sign Up\n                    </Button></Link>\n                                </div>\n                              </Form>\n                            </CardBody>\n                          </Card>\n                        </div>\n\n                      </TabPane>                     \n                    </TabContent>\n                  </CardBody>\n                </Card>\n\n\n\n              </Col>\n            </Row>\n          </Container>\n\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginOrg: PropTypes.func,\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser, loginOrg }\n)(Login);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  UncontrolledCollapse,\n  UncontrolledDropdown,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nclass Navbar1 extends Component {\n  // componentDidMount() {\n  //   // let headroom = new Headroom(document.getElementById(\"navbar-main\"));\n  //   // headroom.init()\n  // }\n  render() {\n    return (\n      <div>\n        <header className=\"header-global\">\n          <Navbar\n            className=\"navbar-main navbar-transparent navbar-light headroom\"\n            expand=\"lg\"\n            id=\"navbar-main\"\n          >\n            <Container>\n              <NavbarBrand className=\"mr-lg-5\" ><Link to='/'>\n                <h3 className=\"text-white\"><b>Easy</b>Recruit</h3></Link>\n              </NavbarBrand>\n              <button className=\"navbar-toggler\" id=\"navbar_global\">\n                <span className=\"navbar-toggler-icon\" />\n              </button>\n              <UncontrolledCollapse navbar toggler=\"#navbar_global\">\n                <div className=\"navbar-collapse-header\">\n                  <Row>\n                    <Col className=\"collapse-brand\" xs=\"6\">\n\n                    </Col>\n                    <Col className=\"collapse-close\" xs=\"6\">\n                      <button className=\"navbar-toggler\" id=\"navbar_global\">\n                        <span />\n                        <span />\n                      </button>\n                    </Col>\n                  </Row>\n                </div>\n                <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\n                  <UncontrolledDropdown nav>\n\n                  </UncontrolledDropdown>\n                  <UncontrolledDropdown nav>\n                    {/*   */}\n                  </UncontrolledDropdown>\n                </Nav>\n                <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.facebook.com/mstcvit/\"\n                      id=\"tooltip333589074\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-facebook-square\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Facebook\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip333589074\">\n                      Like us on Facebook\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.instagram.com/mstcvit/\"\n                      id=\"tooltip356693867\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-instagram\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Instagram\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip356693867\">\n                      Follow us on Instagram\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.linkedin.com/company/micvitvellore\"\n                      id=\"tooltip356693890\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-linkedin\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        LinkedIn\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip356693890\">\n                      Follow us on LinkedIn\n                    </UncontrolledTooltip>\n                  </NavItem>\n\n                </Nav>\n              </UncontrolledCollapse>\n            </Container>\n          </Navbar>\n        </header>\n      </div>\n\n    )\n  }\n}\n\nexport default Navbar1","import React, { Component } from 'react'\nimport Navbar1 from './../navbar.component';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from '../../actions/authActions';\nimport Footer from './../footer.component';\nimport { Link } from 'react-router-dom';\nclass Error extends Component {\n    onLogout = (e) => {\n        e.preventDefault();\n        this.props.logout();\n        this.props.history.push('/')\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n\n    }\n    render() {\n        return (\n            <div>\n                <Navbar1 />\n                <section className=\"section section-lg section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"row-grid justify-content-between align-items-center\">\n                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                                <Col lg=\"12\">\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ paddingBottom: \"1em\", height: \"20em\" }}\n                                        src={require(\"../../assets/img/global_error.svg\")}\n\n                                    />\n                                    <h1 className=\"display-3 text-white\">\n                                        Oops, something went wrong!\n                                    </h1>\n                                    <p className=\"lead text-white\">\n\n                                        Please login again to proceed.   </p>\n\n\n                                    <Link to=\"/\">\n                                        <Button\n                                            className=\"my-4\"\n                                            type=\"submit\"\n\n                                        >\n                                            Login\n                                </Button>\n                                    </Link>\n\n\n                                </Col>\n                            </div>\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        )\n    }\n}\nError.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(\n    mapStateToProps, { logout }\n)(Error)","import React, { Component } from 'react'\nimport Navbar1 from './../navbar.component';\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from '../../actions/authActions'\nimport Footer from './../footer.component';\nclass Error1 extends Component {\n    onLogout = (e) => {\n        e.preventDefault();\n        this.props.logout();\n        this.props.history.push('/')\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n\n    }\n    render() {\n        return (\n            <div>\n                <Navbar1 />\n                <section className=\"section section-lg section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"row-grid justify-content-between align-items-center\">\n                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                                <Col lg=\"12\">\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ paddingBottom: \"1em\", height: \"20em\" }}\n                                        src={require(\"../../assets/img/15.png\")}\n\n                                    />\n                                    <h1 className=\"display-3 text-white\">\n                                        Hey mate, it looks like you've already attempted the test.\n                                    </h1>\n                                    <p className=\"lead text-white\">\n\n                                        We will be reaching out to you as soon as the evaluation is done.   </p>\n                                    <p className=\"lead text-white\">\n                                        <b> NOTE:</b> If you are seeing this page due to some interruptions(without finishing the exam), Kindly <b>login again.</b>\n                                    </p>\n\n\n\n                                    <Button\n                                        className=\"my-4\"\n                                        type=\"submit\"\n                                        onClick={this.onLogout}\n                                    >\n                                        Log Out\n                                </Button>\n\n\n                                </Col>\n                            </div>\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        )\n    }\n}\nError1.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(\n    mapStateToProps, { logout }\n)(Error1)","import React, { Component } from 'react'\nimport Navbar1 from './navbar.component'\nimport Footer from './footer.component'\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from '../actions/authActions'\n\n\n \nclass Finish extends Component {\n    onLogout = (e) => {\n        e.preventDefault();\n        this.props.logout();\n        this.props.history.push('/')\n    }\n    render() {\n        return (\n            <div>\n                <Navbar1 />\n\n\n                <section className=\"section section-lg section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n                    \n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"row-grid justify-content-between align-items-center\">\n                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                                <Col lg=\"12\">\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ paddingBottom: \"1em\", height: \"10em\" }}\n                                        src={require(\"../assets/img/happy.svg\")}\n\n                                    />\n                                    <h1 className=\"display-3 text-white\">\n                                        You have sucessfully completed the exam.\n                                </h1>\n                                    <p className=\"lead text-white\">\n                                        We will be reaching out to you as soon as the evaluation is done.\n                                         \n                                </p>\n                               \n                                    <Button\n                                        className=\"my-4\"\n                                        type=\"submit\"\n                                        onClick={this.onLogout}\n                                    >\n                                        Log Out\n                                </Button>\n                                \n                                \n                            \n                                </Col>\n                            </div>\n                        </Row>\n                    </Container>\n                </section>\n            \n\n\n                <Footer />\n            \n            </div>\n        );\n    }\n}\nFinish.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth:PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth:state.auth\n})\n\nexport default connect(\n    mapStateToProps, {logout}\n)(Finish)\n\n\n","export const Instruction = [\n    {\n        id: 0,\n        text:\"Please follow the instructions of the instructor carefully and do not do otherwise.\"\n    },\n    {\n        id: 1,\n        text: \"Do not minimize or change the browser window during the test.\"\n    },\n    {\n        id: 2,\n        text: \"Never click Back or Refresh button on the browser.This will take you out of the test.\"\n    },\n    {\n        id: 3,\n        text: \"Use the Next button to navigate forward in the examination.Once answered a question and navigated forward, the answers can't be changed.\"\n    },\n    {\n        id: 4,\n        text: \"Most importantly , You should click Save Answers before finishing the test to save the current selection of answers and submit.\"\n    },\n    {\n        id: 5,\n        text: \"For any problems, contact your instructor.Good luck for your exam:-)\"\n    }\n]","import React, { Component } from 'react'\nimport Navbar1 from './navbar.component'\nimport Footer from './footer.component'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Button, Form } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../actions/authActions'\nimport { Instruction } from './exam_instruction'\n\nclass CandProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orgName: 'VIT Music Club',\n            orgDesc: '',\n            isChecked: false\n            // orgImage=''\n        }\n    }\n    fetchDesc = () => {\n        this.setState({\n            orgDesc: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Perspiciatis dignissimos nisi doloribus saepe libero reprehenderit, labore temporibus eveniet debitis eum error ipsam. Cum eligendi dolores maiores pariatur iusto ipsam sint?'\n        })\n    }\n    // fetchOrgImage = () => {\n    //     return\n    // }\n\n    onLogout = e => {\n        e.preventDefault();\n        this.props.logout();\n        this.props.history.push('/')\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        this.fetchDesc();\n    }\n    render() {\n        const { user } = this.props.auth;\n        return (\n            <div>\n                <Navbar1 />\n                <section className=\"section section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"justify-content-between align-items-center\">\n                            <Col className=\"mb-lg-auto\" >\n                                <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                                    <h2 className=\"display-3 text-white\">\n                                        Candidate details\n                                </h2>\n\n                                    <h4 id=\"Name\" className=\"text-white\">{user.name}</h4>\n                                    <h4 id=\"reg_no\" className=\"text-white\">{user.regNo}</h4>\n                                    <span>You are currently appearing test for the club code : </span>\n                                    <b>{user.clubCode}</b><br />\n\n                                    <Button\n                                        className=\"my-4\"\n                                        type=\"button\"\n                                        onClick={this.onLogout}\n                                    >\n                                        Log Out\n                                </Button>\n\n\n\n\n                                </div>\n\n\n                            </Col>\n\n                        </Row>\n                        <Row>\n                            <Col>\n                                <div style={{ margin: \"auto\", textAlign: \"center\", marginTop: \"5em\" }}>\n\n                                    <h2 className=\"display-3 text-white\">\n                                        Exam Instructions\n                                </h2>\n                                </div>\n                                <div style={{ margin: \"auto\", textAlign: \"left\", maxHeight: \"30em\", overflow: \"auto\" }}>\n                                    {Instruction.map((el) => (\n                                        <ul>\n                                            <li key={el.id}>\n                                                <p className=\"text-white\" >\n                                                    {el.text}\n                                                </p>\n                                            </li>\n                                        </ul>\n                                    )\n\n                                    )\n                                    }\n\n                                </div>\n                                <Form role=\"form\">\n                                    <div style={{ marginTop: \"1em\", textAlign: \"right\" }}>\n                                        <div className=\"\">\n                                            <input\n                                                className=\"mycheckbox\"\n                                                id=\"consent\"\n                                                value='consent'\n                                                type=\"checkbox\"\n                                                checked={this.state.isChecked}\n                                                onChange={() => {\n                                                    this.setState({\n                                                        isChecked: !this.state.isChecked\n                                                    })\n                                                }}\n                                            />\n                                            <label\n                                                htmlFor=\"mycheckbox\"\n                                            >\n                                                <span className=\"text-white\">I agree to exam rules and conditions.</span>\n\n                                            </label>\n\n                                        </div>\n                                        <Link to='/exam'>\n                                            {this.state.isChecked ? <Button\n                                                className=\"my-4\"\n                                                type=\"button\"\n                                            >\n                                                Proceed\n                                    </Button> :\n                                                <Button\n                                                    className=\"my-4\"\n                                                    type=\"button\"\n                                                    disabled\n                                                >\n                                                    Proceed\n                                    </Button>}\n\n                                        </Link>\n\n                                    </div>\n                                </Form>\n                            </Col>\n                        </Row>\n                    </Container>\n                </section>\n\n                <Footer />\n\n            </div>\n\n        )\n    }\n}\nCandProfile.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(\n    mapStateToProps, { logout }\n)(CandProfile)\n","import React, { Component } from 'react'\nimport Navbar1 from './navbar.component'\nimport Footer from './footer.component'\nimport classnames from 'classnames'\nimport { Col, Row, Container, Button, FormGroup, InputGroup, Input, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\nimport { registerOrg } from '../actions/authActions'\n\nclass OrgSignUp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            nameFocused: '',\n            emailFocused: '',\n            clubName: '',\n            clubCode: '',\n            mobileNo: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            passwordMatch: false,\n            extras: '',\n            testId: '',\n            errors: {},\n            loading: false\n        }\n        this.onChangePasswordConfirm = this.onChangePasswordConfirm.bind(this)\n\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/orgmanage')\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/orgmanage')\n        }\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            })\n        }\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value.toUpperCase()\n        })\n\n    }\n    onChangeAlter = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    onChangePasswordConfirm(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        }, () => {\n            if (this.state.confirmPassword === this.state.password) {\n                this.setState({\n                    passwordMatch: true\n                })\n            } else {\n                this.setState({\n                    passwordMatch: false\n                })\n            }\n        })\n\n    }\n    buttonState() {\n        this.setState({\n            loading: true\n        })\n        setTimeout(() => {\n            this.setState({\n                loading: false\n            })\n        }, 5000)\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const orgData = {\n            clubCode: this.state.clubCode,\n            clubName: this.state.clubName,\n            email: this.state.email,\n            password: this.state.password,\n            extras: this.state.extras,\n            mobileNo: this.state.mobileNo,\n            testId: this.state.testId\n        }\n        this.buttonState();\n        this.props.registerOrg(orgData, this.props.history);\n    }\n\n\n    render() {\n        const { errors, loading } = this.state;\n        return (\n            <div>\n                <Navbar1 />\n                <section className=\"section section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"justify-content-between align-items-center\">\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n                                <div style={{ margin: 'auto', textAlign: 'center' }}></div>\n                                <h2 className=\"display-3 text-white\">\n                                    Let's get started\n                                </h2>\n\n\n                                {/* The start of the form  */}\n                                <form noValidate onSubmit={this.onSubmit}>\n                                    <FormGroup\n                                        className={classnames(\"mt-5\", {\n                                            focused: this.state.nameFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-user\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"clubName\"\n                                                placeholder=\"Name of the Chapter/Club\"\n                                                type=\"text\"\n                                                name=\"name\"\n                                                onChange={this.onChange}\n                                                value={this.state.clubName}\n                                                error={errors.clubName}\n                                                className={classnames(\"\", {\n                                                    invalid: errors.clubName || errors.namenotfound\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.clubName}\n                                        </span> </div>\n                                    <FormGroup\n                                        className={classnames({\n                                            focused: this.state.emailFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"ni ni-email-83\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"email\"\n                                                placeholder=\"Email address\"\n                                                type=\"email\"\n                                                onChange={this.onChange}\n                                                value={this.state.email}\n                                                name=\"email\"\n\n                                                className={classnames(\"\", {\n                                                    invalid: errors.email || errors.regnotfound\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.email}\n                                        </span> </div>\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-phone\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"mobileNo\"\n                                                placeholder=\"Mobile No.\"\n                                                type=\"number\"\n                                                name=\"mobileNo\"\n                                                onChange={this.onChange}\n                                                error={errors.mobileNo}\n                                                value={this.state.mobileNo}\n                                                className={classnames(\"\", {\n                                                    invalid: errors.mobileNo\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.mobileNo}\n                                        </span> </div>\n\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-user-secret\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"password\"\n                                                placeholder=\"Password (Case sensitive)\"\n                                                type=\"password\"\n                                                name=\"password\"\n                                                onChange={this.onChangeAlter}\n                                                value={this.state.password}\n                                                error={errors.password}\n                                                className={classnames(\"\", {\n                                                    invalid: errors.password || errors.regnotfound\n                                                })}\n\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.password}\n                                        </span> </div>\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-user-secret\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Confirm Password\"\n                                                type=\"password\"\n                                                name=\"confirmPassword\"\n                                                id=\"confirmPassword\"\n                                                onChange={this.onChangePasswordConfirm}\n                                                value={this.state.confirmPassword}\n                                                error={errors.confirmPassword}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n                                        {this.state.confirmPassword.length >= 1 ? (this.state.passwordMatch ? (<span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'green'\n                                                }\n                                            }>\n                                            Passwords are matching!\n                                        </span>) : (<span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            Passwords are not matching!\n                                        </span>)) : ''}\n                                    </div>\n\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-building-o\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"clubCode\"\n                                                placeholder=\"Club Code\"\n                                                type=\"text\"\n                                                name=\"clubCode\"\n                                                onChange={this.onChangeAlter}\n                                                error={errors.clubCode}\n                                                value={this.state.clubCode}\n                                                className={classnames(\"\", {\n                                                    invalid: errors.clubCode\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.clubCode}\n                                        </span> </div>\n\n\n\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-newspaper-o\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"testId\"\n                                                placeholder=\"Test ID\"\n                                                type=\"number\"\n                                                name=\"testId\"\n                                                onChange={this.onChangeAlter}\n                                                error={errors.testId}\n                                                value={this.state.testId}\n                                                className={classnames(\"\", {\n                                                    invalid: errors.testId\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.testId}\n                                        </span> </div>\n\n\n                                    <FormGroup className=\"mb-4\">\n                                        <Input\n                                            id=\"extras\"\n                                            className=\"form-control-alternative\"\n                                            cols=\"80\"\n                                            name=\"message\"\n                                            placeholder=\"Any other customisations...\"\n                                            rows=\"4\"\n                                            type=\"textarea\"\n                                            onChange={this.onChange}\n                                            value={this.state.extras}\n\n                                        />\n                                    </FormGroup>\n                                    <div>\n                                        <center>\n                                            <Button\n                                                className=\"my-4\"\n                                                type=\"submit\"\n\n                                                disabled={(this.state.passwordMatch && this.state.clubName.length >= 1 && this.state.clubCode.length >= 1 && this.state.email.length >= 1 && this.state.testId.length >= 1) ? false : true}\n\n                                            >\n                                                {loading && (\n                                                    <i\n                                                        className=\"fa fa-refresh fa-spin\"\n                                                        style={{ marginRight: \"5px\" }}\n                                                    />\n                                                )}\n                                                {loading && <span>Register</span>}\n                                                {!loading && <span>Register</span>}\n                                            </Button>\n\n                                        </center>\n                                    </div>\n                                </form>\n\n                                {/* End of the form */}\n\n                            </Col>\n\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n\n                                <div style={{ margin: 'auto', textAlign: 'center' }}>\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ paddingBottom: \"1em\", marginTop: \"4em\", height: \"15em\" }}\n                                        src={require(\"../assets/img/delivery-4.png\")}\n\n                                    />\n                                    <h1 className=\"display-4  text-white\" style={{ fontWeight: \"300\" }}>Provide necessary details and we will get back to you shortly.</h1>\n                                    <span>If you encounter any problem , please refresh</span>\n                                </div>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nOrgSignUp.propTypes = {\n    registerOrg: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps,\n    { registerOrg }\n)(OrgSignUp)","import React, { Component } from 'react'\nimport Navbar1 from './navbar.component'\nimport Footer from './footer.component'\nimport classnames from 'classnames'\nimport { Col, Row, Container, Button, FormGroup, InputGroup, Input, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\nimport { registerUser } from '../actions/authActions'\nclass UserSignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameFocused: '',\n            emailFocused: '',\n            name: '',\n            regNo: '',\n            mobileNo: '',\n            blockName: '',\n            roomNo: '',\n            clubCode: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            passwordMatch: false,\n            testId:'',\n            errors: {},\n            loading:false\n\n        }\n        this.onChangePasswordConfirm = this.onChangePasswordConfirm.bind(this)\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/overview');\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/overview')\n        }\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            })\n        }\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value.toUpperCase()\n        })\n\n    }\n    onChangeAlter = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    onChangePasswordConfirm(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        }, () => {\n            if (this.state.confirmPassword === this.state.password) {\n                this.setState({\n                    passwordMatch: true\n                })\n            } else {\n                this.setState({\n                    passwordMatch: false\n                })\n            }\n        })\n\n    }\n    buttonState() {\n        this.setState({\n            loading: true\n        })\n        setTimeout(() => {\n            this.setState({\n                loading: false\n            })\n        }, 5000)\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        const userData = {\n            regNo: this.state.regNo,\n            password: this.state.password,\n            email: this.state.email,\n            mobileNo: this.state.mobileNo,\n            blockName: this.state.blockName,\n            roomNo: this.state.roomNo,\n            clubCode: this.state.clubCode,\n            name: this.state.name,\n            testId:this.state.testId\n        }\n        this.buttonState();\n        this.props.registerUser(userData, this.props.history);\n    }\n    render() {\n        const { errors,loading } = this.state;\n        return (\n            <div>\n\n                <Navbar1 />\n                <section className=\"section section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"justify-content-between align-items-center\">\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n                                <div style={{ margin: 'auto', textAlign: 'center' }}></div>\n                                <h2 className=\"display-3 text-white\">\n                                    Hey let's know about you\n                                </h2>\n\n\n                                {/* The start of the form  */}\n                                <form noValidate onSubmit={this.onSubmit}>\n                                    <FormGroup\n                                        className={classnames(\"mt-5\", {\n                                            focused: this.state.nameFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"ni ni-user-run\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"name\"\n                                                placeholder=\"What's your name?\"\n                                                type=\"text\"\n                                                name=\"name\"\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                error={errors.name}\n\n                                                className={classnames(\"\", {\n                                                    invalid: errors.name || errors.namenotfound\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.name}\n                                        </span> </div>\n                                    <FormGroup\n                                        className={classnames({\n                                            focused: this.state.emailFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-user\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n\n                                                placeholder=\"Registration no.\"\n                                                type=\"text\"\n                                                name=\"regNo\"\n                                                id='regNo'\n                                                onChange={this.onChange}\n                                                value={this.state.regNo}\n                                                error={errors.regNo}\n\n                                                className={classnames(\"\", {\n                                                    invalid: errors.regNo || errors.regnotfound\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.regNo}\n                                        </span> </div>\n\n\n                                    <FormGroup\n                                        className={classnames({\n                                            focused: this.state.emailFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"ni ni-email-83\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"email\"\n                                                placeholder=\"Email address\"\n                                                type=\"email\"\n                                                name=\"email\"\n                                                onChange={this.onChangeAlter}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.email}\n                                        </span> </div>\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-phone\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Mobile No.\"\n                                                type=\"number\"\n                                                name=\"phone\"\n                                                id='mobileNo'\n                                                onChange={this.onChange}\n                                                value={this.state.mobileNo}\n                                                error={errors.mobileNo}\n\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.mobileNo}\n                                        </span> </div>\n\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-home\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Block name / Room no.(NA if staying outside)\"\n                                                type=\"text\"\n                                                name=\"block\"\n                                                id='blockName'\n                                                onChange={this.onChange}\n                                                value={this.state.blockName}\n                                                error={errors.blockName}\n\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>                                    \n\n\n\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-user-secret\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Password (Case sensitive)\"\n                                                type=\"password\"\n                                                name=\"block\"\n                                                id=\"password\"\n                                                onChange={this.onChangeAlter}\n                                                value={this.state.password}\n                                                error={errors.password}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.password}\n                                        </span> </div>\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-user-secret\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Confirm Password\"\n                                                type=\"password\"\n                                                name=\"confirmPassword\"\n                                                id=\"confirmPassword\"\n                                                onChange={this.onChangePasswordConfirm}\n                                                value={this.state.confirmPassword}\n                                                error={errors.confirmPassword}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n                                        {this.state.confirmPassword.length >= 1 ? (this.state.passwordMatch ? (<span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'green'\n                                                }\n                                            }>\n                                            Passwords are matching!\n                                        </span>) : (<span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            Passwords are not matching!\n                                        </span>)) : ''}\n                                    </div>\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-newspaper-o\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"testId\"\n                                                placeholder=\"Test ID (Numeric)\"\n                                                type=\"number\"\n                                                name=\"testId\"\n                                                onChange={this.onChangeAlter}\n                                                value={this.state.testId}\n                                                error={errors.testId}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.testId}\n                                        </span> </div>\n\n\n\n\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-building-o\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Code of club/chapter applying\"\n                                                type=\"text\"\n                                                name=\"block\"\n                                                id=\"clubCode\"\n                                                onChange={this.onChangeAlter}\n                                                value={this.state.clubCode}\n                                                error={errors.clubCode}\n\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.clubCode}\n                                        </span> </div>\n\n                                    <div>\n                                        <center>\n\n                                            <Button\n                                                className=\"my-4\"\n                                                type=\"submit\"\n                                                disabled={(this.state.passwordMatch && this.state.testId.length >= 1 && this.state.clubCode.length >= 1 && this.state.name.length >= 1 && this.state.regNo.length >= 1 && this.state.mobileNo.length >= 1 && this.state.email.length >= 1) ? false : true}\n                                            >\n                                                {loading && (\n                                                    <i\n                                                        className=\"fa fa-refresh fa-spin\"\n                                                        style={{ marginRight: \"5px\" }}\n                                                    />\n                                                )}\n                                                {loading && <span>Register</span>}\n                                                {!loading && <span>Register</span>}\n                    </Button>\n\n                                        </center>\n                                    </div>\n                                </form>\n\n                                {/* End of the form */}\n\n                            </Col>\n\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n\n                                <div style={{ margin: 'auto', textAlign: 'center' }}>\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ height: \"20em\" }}\n                                        src={require(\"../assets/img/user_signup.png\")}\n\n                                    />\n                                    <h1 className=\"display-4  text-white\" style={{ fontWeight: \"300\" }}>Just fill in the details and we will get back you ASAP!</h1>\n                                    <span>If you encounter any problem , please refresh</span>\n                                </div>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        )\n    }\n}\nUserSignUp.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(UserSignUp)","import React, { Component } from 'react'\nimport \"../../assets/css/styles.css\"\nimport { Button } from 'reactstrap'\nimport Navbar1 from '../navbar.component';\nimport Footer from '../footer.component';\nimport { Container, Row, Col } from 'reactstrap'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from '../../actions/authActions'\nimport axios from 'axios'\nimport _ from 'lodash'\nimport { backURL } from '../../utils/integration'\nclass Exam extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userAnswer: null,\n            currentQuestion: 0,\n            options: [],\n            questions: [],\n            QuizData: [],\n            setAns: [],\n            selectedAns: [],\n            ansSaved: false,\n            error: '',\n            loading: false,\n            nextDisable: false\n        };\n    }\n\n    onLogout = e => {\n        e.preventDefault();\n        this.props.logout();\n        this.props.history.push('/')\n    }\n\n    sendResult() {\n        const { user } = this.props.auth;\n        const { setAns } = this.state\n\n        axios\n            .post(`${backURL}/api/post/users/submitTest`,{\n                \"testId\": `${user.testId}`,\n                \"clubCode\": `${user.clubCode}`,\n                \"name\": `${user.name}`,\n                \"regNo\": `${user.regNo}`,\n                'ans': [`${setAns}`],\n                'token': `${localStorage.getItem('jwtToken').split(\" \")[1]}`\n            })\n\n    }\n\n    loadQuiz() {\n        const { user } = this.props.auth;\n\n        axios\n            .post(`${backURL}/api/post/users/takeTest`, {\n                \"testId\": `${user.testId}`,\n                \"clubCode\": `${user.clubCode}`,\n                \"regNo\": `${user.regNo}`,\n                \"token\": `${localStorage.getItem('jwtToken').split(\" \")[1]}`\n\n            })\n            .then(\n                res => {\n\n                    if (res.data.error === 1) {\n                        this.props.history.push('/error-disable')\n                    } else if (res.data.error === 2) {\n                        this.props.history.push('/error-test')\n                    } \n                    this.setState({\n                        QuizData: res.data.questionSet\n                    });\n                    const { currentQuestion, QuizData } = this.state;\n                    this.setState(() => {\n                        return {\n                            quid: QuizData[currentQuestion].quid,\n                            questions: QuizData[currentQuestion].ques,\n                            options: QuizData[currentQuestion].options,\n                        };\n\n                    });\n\n                }).catch((err) => {\n                    this.props.history.push('/error1')\n                })\n    }\n    saveAnswers() {\n        const { selectedAns } = this.state\n        this.setState({\n            setAns: _.uniqBy(selectedAns, '_id')\n        })\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        document.addEventListener('contextmenu', (e) => {\n            e.preventDefault();\n        })\n\n        this.loadQuiz();\n    }\n    nextQuestionHandler = () => {\n        const { QuizData } = this.state;\n        this.setState({\n            currentQuestion: this.state.currentQuestion + 1,\n        }, () => {\n            if (this.state.currentQuestion === QuizData.length - 1) {\n                this.setState({\n                    nextDisable: true\n                })\n            }\n            if (this.state.currentQuestion > QuizData.length - 1) {\n                this.setState({\n                    currentQuestion: QuizData.length - 1,\n\n                })\n            }\n        });\n    };\n    prevQuestionHandler = () => {\n        this.setState({\n            currentQuestion: this.state.currentQuestion - 1,\n        }, () => {\n            if (this.state.currentQuestion < 0) {\n                this.setState({\n                    currentQuestion: 0\n                })\n            }\n        });\n\n    };\n    onLogout() {\n        localStorage.removeItem('the token');\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { QuizData } = this.state;\n        const { currentQuestion } = this.state;\n        if (this.state.currentQuestion !== prevState.currentQuestion && this.state.currentQuestion >= 0) {\n            if (this.state.currentQuestion < QuizData.length) {\n                this.setState(() => {\n\n                    return {\n                        questions: QuizData[currentQuestion].ques,\n                        options: QuizData[currentQuestion].options,\n                    }\n                });\n            }\n            else {\n                this.setState(() => {\n\n                    return {\n                        questions: QuizData[QuizData.length - 1].ques,\n                        options: QuizData[QuizData.length - 1].options,\n                    }\n                })\n            }\n        }\n    }\n    \n    render() {\n        const { questions, options, currentQuestion, QuizData, selectedAns, setAns, ansSaved, loading, nextDisable } = this.state;\n\n        return (\n            <div classname=\"Exam-container\" style={{ userSelect: 'none', MozUserSelect: 'none', WebkitUserSelect: 'none', msUserSelect: 'none', WebkitTouchCallout: 'none' }}>\n                <Navbar1 />\n                <section className=\"section section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n\n                        <div className=\"content\">\n                            <span className=\"my-4 text-white\" style={{ fontWeight: \"bold\", fontSize: \"1.5rem\" }}></span>\n\n                            <Button\n                                className=\"my-4\"\n                                type=\"button\"\n                                onClick={this.onLogout}\n                            >\n                                Log Out\n                                </Button>\n\n                        </div>\n                        <Row className=\"justify-content-between align-items-center\">\n\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n                                <div style={{ margin: 'auto', textAlign: 'center' }}></div>\n                                <h2 className=\"display-3 text-white\">\n                                    Exam Section\n                                </h2>\n\n\n\n                                <span style={{ display: 'block', color: \"white\" }}>\n                                    {`Questions ${currentQuestion + 1} out of ${QuizData.length}`}\n                                </span>\n                                <span className=\"text-white\" style={{ fontSize: \"1.3rem\" }}>{questions}</span>\n                                <br />  <br /> <br /> <br />\n                                {/* <span className=\"text-white\" style={{ fontSize: \"1.3rem\" }}>Last saved ans - </span> */}\n\n                            </Col>\n\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n\n                                <div className=\"quiz-holder\">\n                                    {options.map((option) => (\n                                        <button\n                                            key={option.id}\n                                            className=\"quiz\"\n                                            onClick={() => {\n                                                this.setState(prevState =>\n                                                    ({\n                                                        selectedAns: [{ \"_id\": `${QuizData[currentQuestion].quid}`, \"ans\": option }, ...prevState.selectedAns],\n                                                        ansSaved: false\n                                                    })\n\n                                                );\n\n                                            }\n\n                                            }\n                                        // onClick={() => {\n                                        //     this.setState(prevState =>\n                                        //         ({ setAns: [{ \"_id\": `${QuizData[currentQuestion].quid}`, \"ans\": option },...prevState.setAns ] }),\n\n\n                                        //     )\n\n                                        // }\n\n\n                                        >\n                                            {option}\n                                        </button>\n                                    ))}\n                                </div>\n                                <br />\n                                <div style={{ margin: \"auto\", textAlign: \"right\" }}>\n\n\n                                    <Button\n                                        className=\"my-4\"\n                                        type=\"button\"\n\n                                        onClick={this.nextQuestionHandler}\n                                        disabled={nextDisable}\n                                    >\n                                        Next\n                    </Button>\n                                    {ansSaved ? <Button\n                                        className=\"my-4\"\n                                        style={{\n                                            backgroundColor: \"#b2102f\",\n                                            color: \"white\",\n\n                                        }}\n                                        type=\"button\"\n\n                                        onClick={\n                                            () => {\n                                                this.setState({\n                                                    loading: true\n                                                })\n                                                const { user } = this.props.auth;\n                                                axios\n                                                    .post(`${backURL}/api/post/users/submitTest`, {\n                                                        \"testId\": `${user.testId}`,\n                                                        \"clubCode\": `${user.clubCode}`,\n                                                        \"name\": `${user.name}`,\n                                                        \"email\": `${user.email}`,\n                                                        \"mobileNo\": `${user.mobileNo}`,\n                                                        \"regNo\": `${user.regNo}`,\n                                                        'ans': setAns,\n                                                        'token': `${localStorage.getItem('jwtToken').split(\" \")[1]}`\n                                                    }).then((res) => {\n                                                        if (res.data.error === 1) {\n                                                            this.props.history.push('/error-disable')\n                                                        } else if (res.data.error === 0)\n                                                        this.props.history.push('/finish')\n\n                                                    }).catch((err) => {\n                                                        console.log(err)\n                                                    })\n\n                                            }\n                                                                                    }\n\n                                    >\n                                        {loading && (\n                                            <i\n                                                className=\"fa fa-refresh fa-spin\"\n                                                style={{ marginRight: \"5px\" }}\n                                            />\n                                        )}\n                                        {loading && <span>Finish</span>}\n                                        {!loading && <span>Finish</span>}\n                                    </Button> : <Button\n                                        className=\"my-4\"\n\n                                        type=\"button\"\n\n                                        onClick={() => {\n                                            this.setState({\n                                                setAns: _.uniqBy(selectedAns, '_id'),\n                                                ansSaved: true\n                                            })\n                                        }}\n                                    >\n                                            Save Answers\n                    </Button>}\n                                </div>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        );\n    }\n}\nExam.propTypes =\n{\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\nexport default connect(\n    mapStateToProps, { logout }\n)(Exam)\n\n","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'reactstrap';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { backURL } from '../../utils/integration'\nclass Participants extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            details: [],\n            testId: '',\n            password: '',\n            clubCode: '',\n            loading: false,\n            xls_download: false\n        }\n\n    }\n\n    exportTableToExcel(tableID, filename = '') {\n        var downloadLink;\n        var dataType = 'application/vnd.ms-excel';\n        var tableSelect = document.getElementById(tableID);\n        var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');\n\n        // Specify file name\n        filename = filename ? filename + '.xls' : 'excel_data.xls';\n\n        // Create download link element\n        downloadLink = document.createElement(\"a\");\n\n        document.body.appendChild(downloadLink);\n\n        if (navigator.msSaveOrOpenBlob) {\n            var blob = new Blob(['\\ufeff', tableHTML], {\n                type: dataType\n            });\n            navigator.msSaveOrOpenBlob(blob, filename);\n        } else {\n            // Create a link to the file\n            downloadLink.href = 'data:' + dataType + ', ' + tableHTML;\n\n            // Setting the file name\n            downloadLink.download = filename;\n\n            //triggering the function\n            downloadLink.click();\n        }\n    }\n\n    onSubmit = e => {\n        const { password } = this.state\n        const { org } = this.props.auth\n        e.preventDefault();\n        this.setState({\n            loading: true\n        })\n        const data = {\n            token: `${localStorage.getItem('jwtToken').split(\" \")[1]}`,\n            password: password\n        }\n        axios\n            .post(`${backURL}/api/post/orgs/checkResult`,{\n                \"token\": data.token,\n                // \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlZThhZGMxN2M2NjhhMGEzN2E4OTFjZCIsImNsdWJOYW1lIjoibWtiaGQiLCJjbHViQ29kZSI6IjEwMiIsImlhdCI6MTU5MjMxMTk3OSwiZXhwIjoxNTkyMzEyODc5fQ.-Gz-wfVKGs2KqsVDFv7iL6vPKtzZIeyfNBp9mqbwEaM\",\n                \"clubCode\": `${org.clubCode}`,\n                \"testId\": `${org.testId}`,\n                \"password\": data.password\n            })\n            .then(res => {\n                this.setState({\n                    details: res.data,\n                    xls_download: true,\n                    loading: false\n                })\n            }\n\n            ).catch(err => {\n                alert(\"Sorry the requested resource could not be loaded.Please try again\")\n            })\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n\n    render() {\n        const { details, xls_download } = this.state\n        return (\n            <div >\n                <Row>\n                    <Col>\n                        <div className='center-tag'><h4>Participants Details</h4></div>\n                        <form noValidate onSubmit={this.onSubmit} >\n                            <center>\n                                <span>Get the latest results of the test.</span><br />\n\n                                <Button\n                                    className=\"my-4\"\n                                    type=\"submit\"\n                                    disabled={this.state.loading}\n                                >\n                                    {this.state.loading ? (<><i\n                                        className=\"fa fa-refresh fa-spin\"\n                                        style={{ marginRight: \"5px\" }}\n                                    /><span>Processing</span></>) :\n                                        <span>Fetch Results</span>\n                                    }\n                    </Button>\n\n                            </center>\n                        </form>\n                        <div className='center-tag'>\n                            {xls_download ? <Button\n                                className=\"my-4\"\n                                type=\"button\"\n                                onClick={() => {\n                                    this.exportTableToExcel('participants', 'participant-list');\n                                }}\n                            >\n                                Export to xls\n                    </Button> : ''} </div>\n                        <div className='table-responsive'>\n                            <div id=\"detail-group\">\n                                <table className=\"table-list\" id='participants'>\n                                    <thead className='table-head'>\n                                        <tr >\n                                            <th>Reg.No</th>\n                                            <th>Name</th>\n                                            <th>Marks</th>\n                                            <th>Mobile No.</th>\n                                            <th>Email</th>\n                                        </tr>\n                                    </thead>\n                                    {details.map(el => {\n                                        return (\n\n                                            <tbody>\n                                                <tr>\n                                                    <td style={{ textAlign: 'left' }}>{el.regNo}</td>\n                                                    <td style={{ textAlign: 'left' }}>{el.name}</td>\n                                                    <td style={{ textAlign: 'left' }}>{el.marks}</td>\n                                                    <td style={{ textAlign: 'left' }}>{el.mobileNo}</td>\n                                                    <td style={{ textAlign: 'left', wordWrap: 'break-word' }}>{el.email}</td>\n                                                </tr>\n\n                                            </tbody>\n\n\n\n\n\n                                        )\n                                    })}\n                                </table>\n                            </div>\n\n\n                        </div>\n\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\nParticipants.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(\n    mapStateToProps\n)(Participants);","import React, { Component } from 'react'\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div className='center-tag'>\n                <div className='contact-container'>\n                <h2>\n                    We are always at your service .\n                </h2>\n                <span className=\"contact\">\n                    You can reach us at <b>mstcvit@outlook.com </b> for all of your queries\n                </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React from \"react\";\n\nexport class QuestionRow extends React.Component {\n  render() {\n    var onEditEvent = this.props.onEditEvent;\n    var onDelEvent = this.props.onDelEvent;\n    var question = this.props.question;\n\n    return (\n      <tr>\n        <td>{question._id}</td>\n        <td>{question.ques}</td>\n        <td>{question.options + \",\"}</td>\n        <td>{question.ans}</td>\n        <td>\n          <i className=\"material-icons\" onClick={onEditEvent} style={{ cursor: 'pointer' }}>border_color</i>\n          <i className=\"material-icons\" onClick={onDelEvent} style={{ cursor: 'pointer' }}>delete</i>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\n\nexport class EditRow extends React.Component {\n\trender() {\n\t\tvar question = this.props.question;\n\t\tvar onSaveEvent = this.props.onSaveEvent;\n\t\tlet onDelEvent = this.props.onDelEvent;\n\t\tlet onCellChange = this.props.onCellChange;\n\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t_ids={question._ids}\n\t\t\t\t\t\tname=\"_id\"\n\t\t\t\t\t\tdefaultValue={question._id}\n\t\t\t\t\t\tonChange={onCellChange}\n\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t_ids={question._ids}\n\t\t\t\t\t\tname=\"ques\"\n\t\t\t\t\t\tdefaultValue={question.ques}\n\t\t\t\t\t\tonChange={onCellChange}\n\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t_ids={question._ids}\n\t\t\t\t\t\tname=\"options\"\n\t\t\t\t\t\tdefaultValue={question.options}\n\t\t\t\t\t\tonChange={onCellChange}\n\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t_ids={question._ids}\n\t\t\t\t\t\tname=\"ans\"\n\t\t\t\t\t\tdefaultValue={question.ans}\n\t\t\t\t\t\tonChange={onCellChange}\n\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<i className=\"material-icons\" onClick={onSaveEvent} style={{ cursor: 'pointer' }}>done</i>\n\t\t\t\t\t<i className=\"material-icons\" onClick={onDelEvent} style={{ cursor: 'pointer' }}>delete</i>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t);\n\t}\n}\n","import React from \"react\";\n\nexport class NewRow extends React.Component {\n  render() {\n    var onSaveEvent = this.props.onSaveEvent;\n    let cellChange = this.props.onCellChange;\n\n    return (\n      <tr>\n        <td>\n          <textarea\n            type=\"text\"\n            name=\"_id\"\n            value={this.props._id}\n            onChange={cellChange}\n            className=\"input\"\n          />\n        </td>\n        <td>\n          <textarea\n            type=\"text\"\n            name=\"ques\"\n            value={this.props.ques}\n            onChange={cellChange}\n            className=\"input\"\n          />\n        </td>\n        <td>\n          <textarea\n            type=\"text\"\n            name=\"options\"\n            value={this.props.options}\n            onChange={cellChange}\n            className=\"input\"\n          />\n        </td>\n        <td>\n          <textarea\n            type=\"text\"\n            name=\"ans\"\n            value={this.props.ans}\n            onChange={cellChange}\n            className=\"input\"\n          />\n        </td>\n        <td>\n          <i className=\"material-icons\" onClick={onSaveEvent} style={{ cursor: 'pointer' }}>add_circle</i>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React from \"react\";\nimport { QuestionRow } from \"../components/rows/questionRow\";\nimport { EditRow } from \"../components/rows/editRow\";\nimport { NewRow } from \"../components/rows/newRow\";\n\nexport class Question extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\teditMode: false,\n\t\t\t_id: \"\",\n\t\t\tques: \"\",\n\t\t\toptions: \"\",\n\t\t\tans: \"\"\n\t\t};\n\t\tvar question = this.props.question;\n\n\t\tif (this.props.editMode) this.state.editMode = true;\n\t\tif (this.props.newMode) this.state.newMode = true;\n\t\t// this.state.question = this.props.question;\n\t\tthis.state.question = question;\n\t\tthis.handleRowEdit = this.handleRowEdit.bind(this);\n\t\tthis.handleRowSave = this.handleRowSave.bind(this);\n\t\tthis.handleRowCreate = this.handleRowCreate.bind(this);\n\t\tthis.newRowCellChange = this.newRowCellChange.bind(this);\n\t\tthis.editOnCellChange = this.editOnCellChange.bind(this);\n\t}\n\n\thandleRowCreate() {\n\t\tlet question = {\n\t\t\t_id: this.state._id,\n\t\t\tques: this.state.ques,\n\t\t\toptions: this.state.options,\n\t\t\tans: this.state.ans\n\t\t};\n\t\tthis.props.onRowAdd(question);\n\t\tthis.setState({\n\t\t\t_id: \"\",\n\t\t\tques: \"\",\n\t\t\toptions: \"\",\n\t\t\tans: \"\"\n\t\t});\n\t}\n\n\thandleDeleteClick = () => {\n\t\tthis.props.onDelEvent(this.props.question);\n\t};\n\n\tnewRowCellChange(evt) {\n\t\tvar item = {\n\t\t\tname: evt.target.name,\n\t\t\tvalue: evt.target.value\n\t\t};\n\t\tthis.setState({ [item.name]: item.value });\n\t}\n\n\teditOnCellChange(evt) {\n\t\tlet question = this.state.question;\n\t\tquestion[evt.target.name] = evt.target.value;\n\t\tthis.setState({\n\t\t\tquestion: question\n\t\t});\n\t}\n\n\thandleRowEdit() {\n\t\tthis.setState({ editMode: true });\n\t}\n\n\thandleRowSave() {\n\t\tthis.setState({ editMode: false });\n\t\t// Different than state.name etc to be able to reset it if needed\n\t\tthis.props.onRowSave(this.state.question);\n\t}\n\n\t// Lifecycle methods\n\tcomponentWillReceiveProps(nextProps){\n        if(nextProps.question !== this.props.question){\n            this.setState({question:nextProps.question});\n        }\n    }\n\n\trender() {\n\t\tlet question = this.props.question;\n\t\tlet editMode = this.state.editMode;\n\t\tlet newMode = this.state.newMode;\n\t\tlet rowDel = this.handleDeleteClick;\n\t\tlet newRowCellChange = this.newRowCellChange;\n\t\tlet editOnCellChange = this.editOnCellChange;\n\n\t\tlet rendering;\n\n\t\tif (newMode) {\n\t\t\trendering = (\n\t\t\t\t<NewRow\n\t\t\t\t\tonSaveEvent={this.handleRowCreate}\n\t\t\t\t\tonCellChange={newRowCellChange}\n\t\t\t\t\t_id={this.state._id}\n\t\t\t\t\tques={this.state.ques}\n\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\tans={this.state.ans}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\tif (editMode) {\n\t\t\t\trendering = (\n\t\t\t\t\t<EditRow\n\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\tonDelEvent={rowDel}\n\t\t\t\t\t\tonSaveEvent={this.handleRowSave}\n\t\t\t\t\t\tonCellChange={editOnCellChange}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\trendering = (\n\t\t\t\t\t<QuestionRow\n\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\tonDelEvent={rowDel}\n\t\t\t\t\t\tonEditEvent={this.handleRowEdit}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn rendering;\n\t}\n}\n","import React from \"react\";\nimport { Question } from \"../containers/question\";\nimport \"../styles/QuestionList.css\";\nimport { Button } from 'reactstrap'\nimport axios from 'axios'\nimport { backURL } from '../../../../utils/integration'\n\nexport class QuestionList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testMode: '',\n      loading: false\n    };\n  }\n\n  getTestStatus() {\n    axios.post(`${backURL}/api/post/orgs/getTestStatus`, {\n\n      \"testId\": `${this.props.testId}`\n\n    }).then(res => {\n      this.setState({\n        testMode: res.data\n      })\n    }).catch(err => console.log(err))\n  }\n\n  componentDidMount() {\n    this.getTestStatus()\n  }\n\n  render() {\n    let rows = [];\n\n    let rowDel = this.props.onRowDel;\n    let onRowAdd = this.props.onRowAdd;\n    let onRowSave = this.props.onRowSave;\n\n    this.props.questions.forEach(function(question) {\n      rows.push(\n        <Question\n          question={question}\n          onDelEvent={rowDel}\n          onRowSave={onRowSave}\n          key={question._id}\n        />\n      );\n    });\n    var emptyQuestion = { _ids: \"\", _id: \"\", ques: \"\", options: \"\", ans: \"\" };\n    rows.push(\n      <Question\n        question={emptyQuestion}\n        newMode={true}\n        key=\"newQuestion\"\n        onRowAdd={onRowAdd}\n      />\n    );\n    return (\n      <div className=\"question-list\">\n        <center>\n          <h4>Test Status</h4>\n          <span>Currently, the test is : {this.state.testMode ? (<span style={{ color: 'green' }}>ENABLED</span>) : (<span style={{ color: 'red' }}>DISABLED</span>)}</span><br />\n          <Button\n            className=\"my-4\"\n            type=\"button\"\n            disabled={this.state.loading}\n            onClick={() => {\n              this.setState({\n                loading: true\n              })\n              const { testMode } = this.state\n              axios.post(`${backURL}/api/post/orgs/updateTestStatus`, {\n                \"updateTestStatus\": !testMode,\n                \"testId\": `${this.props.testId}`\n              }).then(res => {\n                this.setState({\n                  testMode: !testMode,\n                  loading: false\n                })\n\n              })\n            }}\n          >\n            {this.state.loading ? (<><i\n              className=\"fa fa-refresh fa-spin\"\n              style={{ marginRight: \"5px\" }}\n            /><span>Processing</span></>) :\n              <span>Toggle Availability</span>\n            }\n                    </Button>\n        </center>\n        <center>\n          <h4>Question Roster</h4>\n        </center>\n        <table className=\"table-list\">\n          <thead className=\"table-head\">\n            <tr style={{textAlign:'center'}}>\n              <th>\n                <span\n                  name=\"_id\"\n                  // onClick={onColumnSort}\n                >\n                  {\" \"}\n                  Question ID{\" \"}\n                </span>\n              </th>\n              <th>\n                <span\n                  name=\"ques\"\n                  // onClick={onColumnSort}\n                >\n                  {\" \"}\n                  Question{\" \"}\n                </span>\n              </th>\n              <th>\n                <span\n                  name=\"options\"\n                  // onClick={onColumnSort}\n                >\n                  {\" \"}\n                  Option{\" \"}\n                </span>\n              </th>\n              <th>\n                <span\n                  name=\"ans\"\n                  // onClick={onColumnSort}\n                >\n                  {\" \"}\n                  Answer{\" \"}\n                </span>\n              </th>\n              <th className=\"LastColumn\" />\n            </tr>\n          </thead>\n          <tbody>            \n            {rows}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { QuestionList } from \"../components/questionList\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { backURL } from '../../../../utils/integration'\n\nclass QuestionHolder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state.questions = [];\n    this.state.shownQuestions = this.state.questions;\n    this.state.filter = {\n      _id: \"\",\n      ques: \"\",\n      options: \"\",\n      ans: \"\"\n    };\n    this.state.activeSort = \"0\";\n\n    this.handleRowDel = this.handleRowDel.bind(this);\n    this.handleRowAdd = this.handleRowAdd.bind(this);\n    this.handleRowSave = this.handleRowSave.bind(this);\n  }\n\n  handleRowDel(question) {\n    const { org } = this.props.auth\n    let index = this.state.questions.indexOf(question);\n    let questions = this.state.questions;\n\n    questions.splice(index, 1);\n    let shownQuestions = questions\n\n\n\n    // Delete on API\n\n    axios\n      .delete(`${backURL}/api/post/orgs/questions/` + question._id, {\n        data: {\n          'clubCode': `${org.clubCode}`,\n          'testId': `${org.testId}`,\n          'token': `${localStorage.getItem('jwtToken').split(\" \")[1]}`\n        }\n\n      })\n      .then(\n        this.setState({\n          questions: questions,\n          shownQuestions: shownQuestions\n        })\n      )\n      .catch(err => {\n        JSON.stringify(err.config);\n      });\n  }\n\n  handleRowAdd(question) {\n    const { org } = this.props.auth\n    // Create on API\n    axios\n      .post(`${backURL}/api/post/orgs/questions/` + question._id, {\n\n        'clubCode': `${org.clubCode}`,\n        'testId': `${org.testId}`,\n        'token': `${localStorage.getItem('jwtToken').split(\" \")[1]}`,\n        'question': {\n          '_id': question._id,\n          'ques': question.ques,\n          'options': question.options.toString().split(\",\"),\n          'ans': question.ans,\n        }\n\n\n\n\n      })\n      .then(res => {\n        question._ids = res.data._id;\n      })\n      .catch(err => {\n        console.log(err)\n      });\n\n    // Update State and the data shown filtered/sorted\n    let questions = this.state.questions;\n    questions.push(question);\n\n    let shownQuestions = questions\n\n\n\n    this.setState({\n      questions: questions,\n      shownQuestions: shownQuestions\n    });\n  }\n\n  handleRowSave(question) {\n    const { org } = this.props.auth\n    // Update on API\n    axios\n      .put(`${backURL}/api/post/orgs/questions/` + question._id, {\n        'clubCode': `${org.clubCode}`,\n        'testId': `${org.testId}`,\n        'token': `${localStorage.getItem('jwtToken').split(\" \")[1]}`,\n        'question': {\n          '_id': question._id,\n          'ques': question.ques,\n          'options': question.options.toString().split(\",\"),\n          'ans': question.ans,\n        }\n      })\n      .then()\n      .catch(err => {\n        console.log(err.response);\n      });\n  }\n\n  handleFilterChange(evt) {\n    let filters = this.state.filter;\n    filters[evt.target.name] = evt.target.value;\n\n    let shownQuestions = this.state.questions.filter\n\n\n    this.setState({ filter: filters, shownQuestions: shownQuestions });\n  }\n\n\n\n  // Lifecycle Methods\n  componentDidMount() {\n    const { org } = this.props.auth;\n    // Read All on API\n    axios\n      .post(`${backURL}/api/post/orgs/viewQuestions`, {\n        'clubCode': `${org.clubCode}`,\n        'testId': `${org.testId}`,\n        'token': `${localStorage.getItem('jwtToken').split(\" \")[1]}`\n      })\n      .then(res => {\n\n        let shownQuestions = res.data\n\n        this.setState({\n          questions: res.data,\n          shownQuestions: shownQuestions\n        });\n      })\n      .catch(err => {\n        console.log(\"API GET : Error \" + err.response);\n      });\n  }\n\n  render() {\n    const { org } = this.props.auth\n    return (\n      <div style={{ overflowX: 'scroll' }}>\n        <QuestionList\n          testId={org.testId}\n          questions={this.state.shownQuestions}\n          filterValue={this.state.filter}\n          onRowDel={this.handleRowDel}\n          onRowAdd={this.handleRowAdd}\n          onRowSave={this.handleRowSave}\n          onFilterChange={this.handleFilterChange}\n        /></div>\n    );\n  }\n}\n\nQuestionHolder.propTypes = {\n  auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(\n  mapStateToProps\n)(QuestionHolder)\n","import React, { Component } from 'react'\n\nclass Initial extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div className='center-tag'>\n                {/* <span style={{ fontSize: \"1.2em\" }}>Welcome to management console</span><br /><br /> */}\n\n            </div>\n        )\n    }\n}\n\nexport default Initial;","import React, { Component } from 'react'\nimport Navbar1 from '../navbar.component';\nimport Footer from '../footer.component';\nimport Participants from '../OrgManage/participants.component'\nimport Contact from '../OrgManage/contact.component'\nimport { Container, Col, Row, Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { HashRouter, NavLink, Route, Link } from 'react-router-dom'\nimport '../../assets/scss/org_sign.scss'\nimport QuestionHolder from './questions/containers/main'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutOrg } from '../../actions/authActions'\nimport Initial from './InitialRoute.component';\nclass OrgManage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orgName: 'VIT Music Club',\n            isOpen: false\n        }\n\n\n    }\n    onLogout = e => {\n        e.preventDefault();\n        this.props.logoutOrg();\n        this.props.history.push('/')\n    }\n\n    resize() {\n        this.setState()\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n\n    }\n\n\n    render() {\n        const { org } = this.props.auth\n        return (\n            <div>\n                <Navbar1 />\n\n\n                <div>\n\n\n                    <section className=\"section section-shaped\">\n                        <div className=\"shape shape-style-1 shape-default\">\n\n                        </div>\n                        <Container className=\"py-md\">\n\n                            <HashRouter>\n                                <div>\n                                    <Row className=\"justify-content-between align-items-center\">\n                                        <Col className=\"mb-lg-auto\" lg=\"6\">\n                                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                                                <span className=\"text-white\" style={{ fontSize: \"1.5rem\" }}>\n                                                    Hi <b>{org.clubName}</b>\n                                                </span>                                           \n\n                                                <span className=\"manage\">Management Console</span>\n                                            </div>\n                                        </Col>\n\n\n                                        <Col>\n                                            <div className=\"center-tag\">\n\n\n                                                <UncontrolledDropdown nav>\n                                                    <DropdownToggle nav>\n                                                        <div className=\"options-opener\">\n                                                            <span className=\"nav-link-inner--text\">Options</span>\n                                                        </div>\n                                                    </DropdownToggle>\n                                                    <DropdownMenu>\n                                                        <DropdownItem to=\"/options\" tag={Link}>\n                                                            <NavLink exact to='/options'><div className=\"options\" tabIndex=\"0\">Questions</div></NavLink>\n                                                        </DropdownItem>\n                                                        <DropdownItem to=\"/participants\" tag={Link}>\n                                                            <NavLink exact to='/participants'><div className=\"options\" tabIndex=\"0\">Participants</div></NavLink>\n                                                        </DropdownItem>\n                                                        <DropdownItem to=\"/contact\" tag={Link}>\n                                                            <NavLink exact to='/contact'> <div className=\"options\" tabIndex=\"0\">Contact Us</div></NavLink>\n                                                        </DropdownItem>\n                                                        <Link to='/'>\n\n                                                        </Link>\n                                                    </DropdownMenu>\n                                                </UncontrolledDropdown>                                                \n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col className=\"mb-lg-auto\">\n                                            <div className=\"placeholder\">\n                                                <div className=\"center-tag\">\n                                                    <Route path='/' component={Initial} />\n\n                                                </div>\n                                                <Route path='/options' component={QuestionHolder} />\n                                                <Route path='/participants' component={Participants} />\n                                                <Route path='/contact' component={Contact} />\n\n                                            </div>\n\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </HashRouter>\n                            <Row >\n                                <Col>\n                                    <div className=\"center-tag\">\n                                        <Button\n                                            className=\"my-4\"\n                                            type=\"button\"\n                                            onClick={this.onLogout}\n\n                                        >\n                                            Log Out\n                                </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </section>\n\n                    <Footer />\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\nOrgManage.propTypes = {\n    auth: PropTypes.object.isRequired,\n    logoutOrg: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(\n    mapStateToProps, { logoutOrg }\n)(OrgManage)\n","import React, { Component } from 'react'\nimport Navbar1 from './../navbar.component';\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from '../../actions/authActions';\nimport Footer from './../footer.component';\nclass ErrorDisable extends Component {\n    onLogout = (e) => {\n        e.preventDefault();\n        this.props.logout();\n        this.props.history.push('/')\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n\n    }\n    render() {\n        return (\n            <div>\n                <Navbar1 />\n                <section className=\"section section-lg section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"row-grid justify-content-between align-items-center\">\n                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                                <Col lg=\"12\">\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ paddingBottom: \"1em\", height: \"20em\" }}\n                                        src={require(\"../../assets/img/15.png\")}\n\n                                    />\n                                    <h1 className=\"display-3 text-white\">\n                                        Hey mate, it looks the exam is not accepting the responses now.\n                                    </h1>\n                                    <p className=\"lead text-white\">\n\n                                        We hope that you have strictly adhere to the exam rules & regulations   </p>\n                                    <p className=\"lead text-white\">\n                                        <b> NOTE:</b> Contact the exam admin for further queries.\n                                    </p>\n\n\n\n\n\n\n\n                                </Col>\n                            </div>\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        )\n    }\n}\nErrorDisable.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(\n    mapStateToProps, { logout }\n)(ErrorDisable)","import React, { Component } from 'react'\nimport Navbar1 from '../navbar.component';\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from '../../actions/authActions'\n\nimport Footer from '../footer.component';\nclass ErrorExamNotStarted extends Component {\n    onLogout = (e) => {\n        e.preventDefault();\n        this.props.logout();\n        this.props.history.push('/')\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n\n    }\n    render() {\n        return (\n            <div>\n                <Navbar1 />\n                <section className=\"section section-lg section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"row-grid justify-content-between align-items-center\">\n                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                                <Col lg=\"12\">\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ paddingBottom: \"1em\", height: \"20em\" }}\n                                        src={require(\"../../assets/img/15.png\")}\n\n                                    />\n                                    <h1 className=\"display-3 text-white\">\n                                        Hey mate, it looks the exam is not enabled as of now.\n                                    </h1>\n                                    <p className=\"lead text-white\">\n\n                                        We hope that you have strictly adhere to the exam rules & regulations   </p>\n                                    <p className=\"lead text-white\">\n                                        <b> NOTE:</b> Contact the exam admin for further queries.\n                                    </p>\n\n                                    <Button\n                                        className=\"my-4\"\n                                        type=\"submit\"\n                                        onClick={this.onLogout}\n                                    >\n                                        Log Out\n                                </Button>\n\n\n\n\n                                </Col>\n                            </div>\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        )\n    }\n}\nErrorExamNotStarted.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nexport default connect(\n    mapStateToProps, { logout }\n)(ErrorExamNotStarted)","import { GET_ERRORS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { SET_CURRENT_USER, SET_CURRENT_ORG } from '../actions/types'\nconst isEmpty = require('is-empty');\nconst initialState = {\n    isAuthenticated: false,\n    isAuthenticated_org: false,\n    user: {},\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case SET_CURRENT_ORG:\n            return {\n                ...state,\n                isAuthenticated_org: !isEmpty(action.payload),\n                org: action.payload\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\nimport errorReducer from './errorReducer'\nimport authReducer from './authReducer'\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer,\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport  thunk  from 'redux-thunk'\nimport roorReducer from './reducers'\n\nconst initialState = {};\nconst middleware = [thunk]\n\nconst store = createStore(\n    roorReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n        compose\n    )\n)\n\nexport default store;","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\n\nconst ProtectedRoute = ({ component: Component, auth, ...props }) => (\n    <Route {...props}\n        render={prop =>\n            auth.isAuthenticated|| auth.isAuthenticated_org === true ? (\n                <Component {...prop} />\n            ) :\n                (<Redirect to=\"/error\" />)}\n    />\n\n);\n\nProtectedRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(ProtectedRoute)","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/hero-login.component\";\nimport Error from \"./components/error/error.component\";\nimport Error1 from \"./components/error/error1.component\";\nimport Navbar1 from \"./components/navbar.component\";\nimport Finish from \"./components/end_exam.component\";\nimport CandProfile from \"./components/user_overview.component\";\nimport OrgSignUp from \"./components/org_signup.component\";\nimport UserSignUp from \"./components/candidate_signup.component\";\nimport Exam from \"./components/quiz/exam.component\";\nimport OrgManage from \"./components/OrgManage/Org_manage.component\";\nimport ErrorDisable from './components/error/error_test_off.component';\nimport ErrorExamNotStarted from './components/error/error_test_not_started.component'\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ProtectedRoute from \"./components/protectedRoute\";\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n          <div>\n            <Navbar1 />\n            <Switch>\n              <ProtectedRoute exact path=\"/overview\" component={CandProfile} />\n              <ProtectedRoute path=\"/exam\" exact component={Exam} />\n              <ProtectedRoute path=\"/orgmanage\" exact component={OrgManage} />\n              <ProtectedRoute path=\"/finish\" exact component={Finish} />\n\n              <Route path=\"/\" exact render={(props) => <Login {...props} />} />\n              <Route\n                path=\"/error1\"\n                exact\n                render={(props) => <Error1 {...props} />}\n              />\n              <Route\n                path=\"/error\"\n                exact\n                render={(props) => <Error {...props} />}\n              />\n              <Route\n                path=\"/orgsignup\"\n                exact\n                render={(props) => <OrgSignUp {...props} />}\n              />\n              <Route\n                path=\"/candsignup\"\n                exact\n                render={(props) => <UserSignUp {...props} />}\n              />\n              <Route\n                path=\"/error-disable\"\n                exact\n                render={(props) => <ErrorDisable {...props} />}\n              />\n              <Route\n                path=\"/error-test\"\n                exact\n                render={(props) => <ErrorExamNotStarted {...props} />}\n              />\n              <Route component={Error} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"../src/assets/vendor/nucleo/css/nucleo.css\";\nimport \"../src/assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport \"../src/assets/scss/customize.scss\";\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\nserviceWorker.register({\n  onUpdate: registration => {\n    const waitingSW = registration.waiting;\n\n    if (waitingSW) {\n      alert(\"A new version of the app is available.Please update\")\n      waitingSW.addEventListener(\"statechange\", event => {\n        if (event.target.state === 'activated') {\n          window.location.reload();\n        }\n      });\n      waitingSW.postMessage({ type: \"SKIP_WAITING\" })\n    }\n  }\n});","module.exports = __webpack_public_path__ + \"static/media/15.325e01e0.png\";","module.exports = __webpack_public_path__ + \"static/media/white.d9d9b462.svg\";"],"sourceRoot":""}